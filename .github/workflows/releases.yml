name: Release

on:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        description: Release type
        options:
          - major
          - minor
          - patch
          - rc
          - beta
          - alpha

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      CARGO_TOKEN: ${{ secrets.CARGO_TOKEN }}
      RELEASE_TYPE: ${{ github.event.inputs.release_type }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
      - name: Use Rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Cache Rust dependencies
        uses: actions/cache@v2
        with:
          path: "~/.cargo"
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Install cargo-release
        run: |
          cargo install cargo-release --locked
      - name: Cargo login
        run: |
          cargo login $CARGO_TOKEN
      - name: Dry-run cargo release
        run: |
          cargo release --workspace ${RELEASE_TYPE:-alpha} --exclude ethers-wasm
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install semver
        run: |
          npm install semver
      - name: Install git-cliff
        run: |
          cargo install git-cliff --locked
      - name: Generate changelog
        id: changelog
        run: |
          current_version=$(git tag --contains HEAD -l "v*" | head -1)
          from_version=$(node .github/workflows/release-tag-from.js $current_version $RELEASE_TYPE)
          echo "from $from_version to $current_version"
          echo "::set-output name=release_version::$current_version"
          if git rev-parse "$from_version" >/dev/null 2>&1; then
            echo "Tag exists, can generate changelog"
          else
            echo "Tag does not exist, cannot generate changelog, publish GitHub release manually"
            exit 1
          fi
          git cliff $from_version..$current_version > GENERATED_CHANGELOG.md
          cat GENERATED_CHANGELOG.md
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.release_version }}
          release_name: ${{ steps.changelog.outputs.release_version }}
          body_path: GENERATED_CHANGELOG.md
          prerelease: ${{ env.RELEASE_TYPE == 'alpha' }}
